name: 'Sync Fork with Upstream and Run Jobs'

on:
  schedule:
    - cron: '0 1 * * *'  # 每天 UTC 时间 01:00 自动运行
  workflow_dispatch:  # 手动触发

jobs:
  sync_with_upstream:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout this repository
      uses: actions/checkout@v2
      with:
        persist-credentials: false  # 禁用默认凭证，以便我们使用 GITHUB_TOKEN
    
    # 设置 Git 用户身份
    - name: Set up Git config
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"

    # 备份当前分支，防止修改丢失
    - name: Create backup branch
      run: |
        # 创建备份分支
        git checkout -b backup-$(date +'%Y%m%d')

        # 使用 GITHUB_TOKEN 配置推送远程仓库的身份验证
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
        
        # 拉取远程分支并尝试合并不相关的历史
        git fetch origin backup-$(date +'%Y%m%d') || true
        git merge origin/backup-$(date +'%Y%m%d') --allow-unrelated-histories || true

        # 推送备份分支到远程仓库，如果失败则强制推送
        git push origin backup-$(date +'%Y%m%d') || git push --force origin backup-$(date +'%Y%m%d')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # 设置上游远程仓库，并拉取上游最新的更改
    - name: Set up upstream and fetch changes
      run: |
        git remote add upstream https://github.com/kimwang1978/collect-tv-txt.git  # 替换为上游仓库地址
        git fetch upstream
        git checkout main  # 切换回 main 分支
        git merge upstream/main || echo "Merge conflicts detected. Resolving automatically."

    # 自动解决合并冲突
    # 当发生合并冲突时，保留上游版本的代码
    - name: Resolve merge conflicts automatically
      run: |
        git merge --abort || true  # 放弃之前未完成的合并
        git checkout --ours .    # 保留上游的更改，丢弃本地更改
        git add .                  # 标记冲突已解决
        git commit -m "Resolved merge conflicts by keeping upstream changes" || echo "No conflicts to resolve."


    # 提交并推送合并后的代码
    - name: Commit and push changes
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"

        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  run_jobs:
    needs: sync_with_upstream  # 在合并完成后运行
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

    - name: Run Python script
      run: |
        python main.py  # 替换为你的实际脚本路径和命令

    # 上传生成的文件
    - name: Upload generated files
      uses: actions/upload-artifact@v4
      with:
        name: generated-files
        path: |
          merged_output.txt
          merged_output.m3u
          merged_output_simple.txt
          merged_output_simple.m3u
          others_output.txt

    # 提交生成的文件
    - name: Commit generated files
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        
        git add merged_output.txt merged_output.m3u merged_output_simple.txt merged_output_simple.m3u others_output.txt || true
        
        # 提交更改并推送
        if git diff --cached --quiet; then
          echo "No new generated files to commit."
        else
          git commit -m "Update generated files"
          git push origin main
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
